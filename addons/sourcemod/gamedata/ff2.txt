"Games"
{
	"tf"
	{
		"Signatures"
		{
			"CLagCompensationManager::StartLagCompensation"
			{
				// "Trying to start a new lag compensation "
				"library"	"server"
				"linux"		"@_ZN23CLagCompensationManager20StartLagCompensationEP11CBasePlayerP8CUserCmd"
				"windows"	"\x55\x8B\xEC\x83\xEC\x28\x57\x8B\xF9\x89\x7D\xE4"
			}
			"CLagCompensationManager::FinishLagCompensation"
			{
				// "FinishLagCompensation"
				"library"	"server"
				"linux"		"@_ZN23CLagCompensationManager21FinishLagCompensationEP11CBasePlayer"
				"windows"	"\x55\x8B\xEC\x83\xEC\x40\x8B\x15\x2A\x2A\x2A\x2A\x53\x56\x33\xF6\x8B\xD9"
			}
			"CTFDroppedWeapon::Create"
			{
				// "tf_dropped_weapon" Single Large Function
				"library"	"server"
				"linux"		"@_ZN16CTFDroppedWeapon6CreateEP9CTFPlayerRK6VectorRK6QAnglePKcPK13CEconItemView"
				"windows"	"\x55\x8B\xEC\x51\xA1\x2A\x2A\x2A\x2A\x80\xB8\x72\x0C\x00\x00\x00"
			}
			"CTFDroppedWeapon::InitDroppedWeapon"
			{
				// "ChargeLevelDegradeThink" Called by 3 Funcs
				"library"	"server"
				"linux"		"@_ZN16CTFDroppedWeapon17InitDroppedWeaponEP9CTFPlayerP13CTFWeaponBasebb"
				"windows"	"\x55\x8B\xEC\x83\xEC\x30\x56\x57\x8B\xF9\x8B\x4D\x08"
			}
			"CTFDroppedWeapon::InitPickedUpWeapon"
			{
				// "ChargeLevelDegradeThink" Called only by CTFPlayer::PickupWeaponFromOther
				"library"	"server"
				"linux"		"@_ZN16CTFDroppedWeapon18InitPickedUpWeaponEP9CTFPlayerP13CTFWeaponBase"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\xD9\xEE\x53\x56\x57"
			}
			"CTFGameStats::ResetRoundStats"
			{
				// "stats_resetround"
				"library"	"server"
				"linux"		"@_ZN12CTFGameStats15ResetRoundStatsEv"
				"windows"	"\x53\x8B\xD9\x56\xBE\x66\x00\x00\x00"
			}
			"CTFGameStats::IncrementStat"
			{
				"library"	"server"
				"linux"		"@_ZN12CTFGameStats13IncrementStatEP9CTFPlayer12TFStatType_ti"
				"windows"	"\x55\x8B\xEC\x56\x8B\xF1\x8B\x0D\x2A\x2A\x2A\x2A\x85\xC9\x74\x2A\xE8\x2A\x2A\x2A\x2A"
			}
			"CTFPlayer::CanAirDash"
			{
				// "set_scout_doublejump_disabled"
				"library"	"server"
				"linux"		"@_ZNK9CTFPlayer10CanAirDashEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\x53\x57\x8B\xF9\x8B\x87\xB4\x1B\x00\x00"
			}
			"CTFPlayer::CanPickupDroppedWeapon"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer22CanPickupDroppedWeaponEPK16CTFDroppedWeapon"
				"windows"	"\x55\x8B\xEC\x51\x8B\x45\x08\x53\x56\x57\x80\xB8\x04\x05\x00\x00\x00"
			}
			"CTFPlayer::CheckBlockBackstab"
			{
				// "set_blockbackstab_once"
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer18CheckBlockBackstabEPS_"
				"windows"	"\x55\x8B\xEC\x83\xEC\x14\x53\x56\x57\x8B\xF9\x8D\x8F\xE0\x1A\x00\x00"
			}
			"CTFPlayer::DropAmmoPack"
			{
				// "models/items/ammopack_medium.mdl"
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer12DropAmmoPackERK15CTakeDamageInfobb"
				"windows"	"\x55\x8B\xEC\x83\xEC\x2C\x53\x56\x8B\xF1\xC7\x45\xFC\x00\x00\x00\x00"
			}
			"CTFPlayer::GetMaxAmmo"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer10GetMaxAmmoEii"
				"windows"	"\x55\x8B\xEC\x8B\x45\x0C\x53\x8B\xD9"
			}
			"CTFPlayer::PickupWeaponFromOther"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer21PickupWeaponFromOtherEP16CTFDroppedWeapon"
				"windows"	"\x55\x8B\xEC\x83\xEC\x24\x53\x56\x57\x8B\x7D\x08\x8B\xF1\x81\xC7\xB0\x04\x00\x00"
			}
			"CTFPlayer::RegenThink"
			{
				// "add_health_regen"
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer10RegenThinkEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x7C\x56\x8B\xF1"
			}
			"CTFPlayer::TeamFortress_SetSpeed"
			{
				"library"	"server"
				"linux"		"@_ZN9CTFPlayer21TeamFortress_SetSpeedEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x28\xA1\x2A\x2A\x2A\x2A\x56"
			}
			"CTFPowerup::DropSingleInstance"
			{
				// "PowerupRemoveThink"
				"library"	"server"
				"linux"		"@_ZN10CTFPowerup18DropSingleInstanceER6VectorP20CBaseCombatCharacterff"
				"windows"	"\x55\x8B\xEC\x51\x53\x56\x57\x6A\x01\x6A\x05"
			}
		}
		"Offsets"
		{
			"CBaseEntity::ChangeTeam"
			{
				"linux"		"97"
				"windows"	"96"
			}
			"CBasePlayer::ForceRespawn"
			{
				"linux"		"337"
				"windows"	"336"
			}
			"CEconItemView::IterateAttributes"
			{
				"linux"		"19"
				"windows"	"18"
			}
			"CTeamplayRoundBasedRules::RoundRespawn"
			{
				"linux"		"231"
				"windows"	"229"
			}
			"CTeamplayRules::SetWinningTeam"
			{
				"linux"		"165"
				"windows"	"164"
			}
			"CTeam::AddPlayer"
			{
				"linux"		"209"
				"windows"	"208"
			}
			"CTeam::RemovePlayer"
			{
				"linux"		"210"
				"windows"	"209"
			}
			"CTFGameRules::GetCaptureValueForPlayer"
			{
				"linux"		"158"
				"windows"	"157"
			}
			"CTFWeaponBase::ApplyPostHitEffects"
			{
				"linux"		"424"
				"windows"	"417"
			}
			"CTFWeaponBase::ApplyOnInjuredAttributes"
			{
				"linux"		"425"
				"windows"	"418"
			}
			"m_bitsDamageType"
			{
				"linux"		"60"
				"windows"	"60"
			}
			"GetCurrentCommand"
			{
				"linux"		"3512"
				"windows"	"3512"
			}
			"CTFPlayer::m_iBlastJumpState"
			{
				"linux"		"8584"
				"windows"	"8584"
			}
		}
		"Functions"
		{
			"CBaseEntity::ChangeTeam"
			{
				"offset"	"CBaseEntity::ChangeTeam"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"team"
					{
						"type"	"int"
					}
				}
			}
			"CBasePlayer::ForceRespawn"
			{
				"offset"	"CBasePlayer::ForceRespawn"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CEconItemView::IterateAttributes"
			{
				"offset"	"CEconItemView::IterateAttributes"
				"hooktype"	"raw"
				"return"	"void"
				"this"		"address"
				"arguments"
				{
					"IEconItemAttributeIterator"
					{
						"type"	"objectptr"
					}
				}
			}
			"CLagCompensationManager::StartLagCompensation"
			{
				"signature"	"CLagCompensationManager::StartLagCompensation"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"address"
				"arguments"
				{
					"player"
					{
						"type"	"cbaseentity"
					}
					"cmd"
					{
						"type"	"objectptr"
					}
				}
			}
			"CTeamplayRoundBasedRules::RoundRespawn"
			{
				"offset"	"CTeamplayRoundBasedRules::RoundRespawn"
				"hooktype"	"gamerules"
				"return"	"void"
				"this"		"ignore"
			}
			"CTeamplayRules::SetWinningTeam"
			{
				"offset"	"CTeamplayRules::SetWinningTeam"
				"hooktype"	"gamerules"
				"return"	"void"
				"this"		"ignore"
				"arguments"
				{
					"team"
					{
						"type"	"int"
					}
					"iWinReason"
					{
						"type"	"int"
					}
					"bForceMapReset"
					{
						"type"	"bool"
					}
					"bSwitchTeams"
					{
						"type"	"bool"
					}
					"bDontAddScore"
					{
						"type"	"bool"
					}
					"bFinal"
					{
						"type"	"bool"
					}
				}
			}
			"CTFGameRules::GetCaptureValueForPlayer"
			{
				"offset"	"CTFGameRules::GetCaptureValueForPlayer"
				"hooktype"	"gamerules"
				"return"	"int"
				"this"		"ignore"
				"arguments"
				{
					"player"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFGameStats::ResetRoundStats"
			{
				"signature"	"CTFGameStats::ResetRoundStats"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"address"
			}
			"CTFPlayer::CanAirDash"
			{
				"signature"	"CTFPlayer::CanAirDash"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
			}
			"CTFPlayer::CanPickupDroppedWeapon"
			{
				"signature"	"CTFPlayer::CanPickupDroppedWeapon"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pWeapon"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFPlayer::DropAmmoPack"
			{
				"signature"	"CTFPlayer::DropAmmoPack"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"info"
					{
						"type"	"objectptr"
					}
					"bEmpty"
					{
						"type"	"bool"
					}
					"bDisguisedWeapon"
					{
						"type"	"bool"
					}
				}
			}
			"CTFPlayer::PickupWeaponFromOther"
			{
				"signature"	"CTFPlayer::PickupWeaponFromOther"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pDroppedWeapon"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFPlayer::RegenThink"
			{
				"signature"	"CTFPlayer::RegenThink"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
			}
			"CTFWeaponBase::ApplyPostHitEffects"
			{
				"offset"	"CTFWeaponBase::ApplyPostHitEffects"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"info"
					{
						"type"	"objectptr"
					}
					"pVictim"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFWeaponBase::ApplyOnInjuredAttributes"
			{
				"offset"	"CTFWeaponBase::ApplyOnInjuredAttributes"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pVictim"
					{
						"type"	"cbaseentity"
					}
					"pAttacker"
					{
						"type"	"cbaseentity"
					}
					"info"
					{
						"type"	"int"
					}
				}
			}
		}
	}
}
